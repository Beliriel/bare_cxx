// -*-coding: mule-utf-8-unix; fill-column: 59 -*-
/** 
 * @file
 *
 * This file is a part of Bare C++ library. Bare C++
 * library is a standard library specially designed for
 * systems without memory protection like exokernel
 * operating systems.
 *
 * @author Sergei Lodyagin <serg@kogorta.dp.ua>
 * @copyright (C) 2013 Cohors LLC
 *
 */

#ifndef _NEW_HEADER_
#define _NEW_HEADER_

#include <cstddef>
#include <exception>

// TODO check ptr inside the current process
inline void* operator new (std::size_t, void* ptr)
{
  return ptr;
} 

inline void* operator new[] (std::size_t, void* ptr)
{
  return ptr;
} 

void operator delete  ( void* ptr );
void operator delete[]( void* ptr );
//void operator delete  ( void* ptr, const std::nothrow_t& );
//void operator delete[]( void* ptr, const std::nothrow_t& );
void operator delete (void* ptr, void*);
void operator delete[] (void* ptr, void*);

namespace std {

class bad_alloc : public exception
{
public:
  bad_alloc() 
    : exception("dynamic storage allocation failed")
  {}
};

}

#endif
