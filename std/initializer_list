// -*-coding: mule-utf-8-unix; fill-column: 59 -*-
/** 
 * @file
 *
 * This file is a part of Bare C++ library. Bare C++
 * library is a standard library specially designed for
 * systems without memory protection like exokernel
 * operating systems.
 *
 * @author Sergei Lodyagin <serg@kogorta.dp.ua>
 * @copyright (C) 2013 Cohors LLC
 *
 */

#ifndef _INITIALIZER_LIST_HEADER_
#define _INITIALIZER_LIST_HEADER_

#include <cstddef>
#include <dynarray>

namespace std {

template<class T>
initializer_list : protected bare::dynarray
{
public:
  typedef T value_type;
  typedef const T& const_reference;
  typedef const_reference reference;
  typedef size_t size_type;
  //typedef const T* const_iterator;
  //typedef const_iterator iterator;

  constexpr initializer_list() noexcept;

  constexpr size_type size() const;

  constexpr const_iterator begin() const;
  constexpr const_iterator end() const;
private:
  // GCC will implicitly call this constructor
  initializer_list(const T* ptr, size_t n) noexcept;
};

}

#endif
